on:
  push:
    branches:
      - master

name: Deploy in here
env:
    aws-access-key-id: my-name
    aws-secret-access-key: my-Name2
    AWS_REGION: us-east-1
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest


    steps:
    - name: CheckoutReal
      uses: actions/checkout@v2
    - name: Checkout
      id: checkout
      env:
        name: faraz
        ahmad: namehai
        MYENV: ${{ env.aws-access-key-id }}
      run: |
        echo $MYENV
        echo "::set-env name=action_state::yellow"
        echo "name=$AWS_REGION"
        
    - uses: pCYSl5EDgo/cat@master
      id: hello
      with:
        path: ./command.txt

    - name: Configure AWS credentials
      env:
        name: faraz
        ahmad: namehai
      run: |
        ${{ steps.hello.outputs.text }}
        echo "name=$AWS_REGION"
        echo "name=$action_state"

    - id: files
      uses: jitterbit/get-changed-files@v1
    - run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          if [[ "$changed_file" == *"workflows"* ]]; then
              echo "::set-output name=deploy-frontend::yes"
          fi
          if [[ "$changed_file" == *".github"* ]]; then
              echo "::set-output name=deploy-backend::yes"
          fi
        done
    
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
    - run: |
            echo "${{ steps.files.outputs.deploy-frontend }}"
            echo "${{ steps.files.outputs.deploy-backend }}"
            echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
